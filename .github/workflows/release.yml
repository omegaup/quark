name: Release

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:

  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: Install git2go
        run: |
          export GOPATH="$(go env GOPATH)"
          go mod edit -replace "github.com/libgit2/git2go/v33=${GOPATH}/src/github.com/libgit2/git2go"
          git clone --recurse-submodules https://github.com/libgit2/git2go -b v33.0.4 "${GOPATH}/src/github.com/libgit2/git2go"
          go get -d github.com/libgit2/git2go/v33
          (cd "${GOPATH}/src/github.com/libgit2/git2go/" && USE_CHROMIUM_ZLIB=ON ./script/build-libgit2-static.sh)

      - name: Get dependencies
        run: go get -tags=static -t -v ./...

      - name: Bump version and push tag
        id: bump-version
        uses: anothrNick/github-tag-action@9885a4f9af674ba472de91fb3c0cb033ecb32b7e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          INITIAL_VERSION: 1.0.0

      - name: Build
        run: |
          mkdir -p artifacts/backend/usr/bin/
          go build -o artifacts/backend/usr/bin/omegaup-grader \
            -ldflags "-X main.ProgramVersion=${{ steps.bump-version.outputs.tag }}" \
            -tags=static \
            github.com/omegaup/quark/cmd/omegaup-grader
          go build -o artifacts/backend/usr/bin/omegaup-broadcaster \
            -ldflags "-X main.ProgramVersion=${{ steps.bump-version.outputs.tag }}" \
            -tags=static \
            github.com/omegaup/quark/cmd/omegaup-broadcaster

          mkdir -p artifacts/runner/usr/bin/
          go build -o artifacts/runner/usr/bin/omegaup-runner \
            -ldflags "-X main.ProgramVersion=${{ steps.bump-version.outputs.tag }}" \
            -tags=static \
            github.com/omegaup/quark/cmd/omegaup-runner

      - name: Package
        run: |
          tar -cJf omegaup-backend.tar.xz --owner=root:0 --group=root:0 -C artifacts/backend/ .
          tar -cJf omegaup-runner.tar.xz --owner=root:0 --group=root:0 -C artifacts/runner/ .

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump-version.outputs.tag }}
          release_name: ${{ steps.bump-version.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload omegaup-backend.tar.xz Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./omegaup-backend.tar.xz
          asset_name: omegaup-backend.tar.xz
          asset_content_type: application/octet-stream

      - name: Upload omegaup-runner.tar.xz Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./omegaup-runner.tar.xz
          asset_name: omegaup-runner.tar.xz
          asset_content_type: application/octet-stream

      - name: Build Docker images
        run: |
          echo "${{ github.token }}" | \
              docker login https://docker.pkg.github.com "--username=${{ github.actor }}" --password-stdin

          mkdir -p docker/bin
          cp artifacts/runner/usr/bin/omegaup-runner docker/bin/omegaup-runner
          docker build --tag omegaup/runner-ci docker/
          docker build --tag omegaup/runner --build-arg RELEASE=${{ steps.bump-version.outputs.tag }} -f docker/Dockerfile.runner docker/
          docker build --tag omegaup/backend --build-arg RELEASE=${{ steps.bump-version.outputs.tag }} -f docker/Dockerfile.backend docker/

      - name: Push container images to GitHub registry
        run: |
          echo "${{ github.token }}" | \
              docker login https://docker.pkg.github.com "--username=${{ github.actor }}" --password-stdin

          container_name=docker.pkg.github.com/${{ github.repository }}/omegaup-runner-ci:${{ steps.bump-version.outputs.tag }}
          docker tag omegaup/runner-ci "${container_name}"
          docker push "${container_name}"

          container_name=docker.pkg.github.com/${{ github.repository }}/runner:${{ steps.bump-version.outputs.tag }}
          docker tag omegaup/runner "${container_name}"
          docker push "${container_name}"

          container_name=docker.pkg.github.com/${{ github.repository }}/backend:${{ steps.bump-version.outputs.tag }}
          docker tag omegaup/backend "${container_name}"
          docker push "${container_name}"

      - name: Push container images to Docker registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | \
              docker login "--username=${{ secrets.DOCKER_USERNAME }}" --password-stdin

          container_name=omegaup/runner-ci:${{ steps.bump-version.outputs.tag }}
          docker tag omegaup/runner-ci "${container_name}"
          docker push "${container_name}"

          container_name=omegaup/runner:${{ steps.bump-version.outputs.tag }}
          docker tag omegaup/runner "${container_name}"
          docker push "${container_name}"

          container_name=omegaup/backend:${{ steps.bump-version.outputs.tag }}
          docker tag omegaup/backend "${container_name}"
          docker push "${container_name}"
